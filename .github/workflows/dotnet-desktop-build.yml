name: Build pull requests

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: windows-latest

    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0

    - name: Nuget package cache
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage
    
    - name: Start sonarcloud scanner
      run: |
        dotnet sonarscanner begin /k:"alexsee_bsh3" /o:"alexsee" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: ./src

    - name: Build application
      run: |
        dotnet build --configuration Release
      working-directory: ./src

    - name: Test application and collect coverage
      run: |
        dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
      working-directory: ./src

    - name: Finish the sonar cloud scanner
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      working-directory: ./src
