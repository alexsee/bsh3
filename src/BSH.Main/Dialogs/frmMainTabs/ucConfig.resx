<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 18</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACQ
        CwAAAk1TRnQBSQFMAgEBAwEAARQBAQEUAQEBFgEAARYBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFY
        AwABFgMAAQEBAAEgBQABQAEe/wD/AP8AiQADGwElAygBPAMtAUYDLQFGAy0BRgMtAUYDLQFGAy0BRgMt
        AUYDLQFGAy0BRgMtAUYDLQFGAy0BRgMtAUYDLQFGAy0BRgMTARlsAAQCAyoBQAMzAVUDMwFVAzMBVQMz
        AVUDMwFVAzMBVQMzAVUDMwFVAzMBVQMzAVUDMwFVAzMBVQMzAVUDMwFVAyoBQAMCAQNkAANPAZ0DMgHp
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AzgBXWwAAz0BsAMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMh
        Af8DIQH/AyEB/wMhAf8DPQGuEAAEAQM3AVoDSQGVA0kBmQNJAZkDSQGZA0kBmQNJAZkDSQGZA0kBmQNJ
        AZkDSQGZA0kBmQNJAZkDSQGZA0kBlQM2AVkEAQwAAz4B3wMyAeoDSgGLA0oBiwNKAYsDSgGLA0oBiwNK
        AYsDSgGLA0oBiwNKAYsDSgGLA0oBiwNKAYsDSgGLA0oBiwNKAYsDIwEzaAADFgEeAyEB/wM2AV8DDQER
        Aw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQM2AWADIQH/
        AxYBHQwAA0ABcwM7Ad8DRAF/A0IBdwNCAXcDQgF3A0IBdwNCAXcDQgF3A0IBdwNCAXcDQgF3A0IBdwNC
        AXcDQgF3A0QBfwM7AeADPwFxDwAB/wNLAdGoAAMfASsDIQH/AyQBNTgAAyQBNQMhAf8DHwErDAADSAHD
        AzYBWDAAAwcBCQQAAzYBWANIAcMPAAH/A0sB0QQAAxUBHQM9AWkDTQGWA08BogNPAaIDTwGiA08BogNP
        AaIDTwGiA08BogNPAaIDTwGiA08BogNPAaIDTwGiA0gBhQM2AVgDBgEHXAADHwErAyEB/wMkATU4AAMk
        ATUDIQH/Ax8BKwwAA0MBzAMxAU0sAANCAXcDNwHnBAIDMQFNA0MBzA8AAf8DSwHRBAADKgE/A00BzQMQ
        AfoDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DIwHyA04BxgMN
        ARFcAAMfASsDIQH/AyQBNTgAAyQBNQMhAf8DHwErDAADRQHLAzEBTiwAAxsBJQM4AVwEAAMxAU4DRQHL
        DwAB/wNLAdEEAAM2AVkDFAH5A0oBjQMgAS4DIAEuAyABLgMgAS4DIAEuAyABLgMgAS4DIAEuAyABLgMg
        AS4DIAEuAyABLgNOAcYDFAH5AxEBFlwAAx8BKwMhAf8DJAE1OAADJAE1AyEB/wMfASsMAANKAagDSwGh
        AxoBIwMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMaASMDSgGi
        A0oBrg8AAf8DSwHRBAADOAFdAwAB/wNCAXQwAANRAbkDAAH/AxIBF1wAAx8BKwMhAf8DJAE1OAADJAE1
        AyEB/wMfASsMAAM3AVoDIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMh
        Af8DIQH/AyEB/wMlAf0DIwH+Az0BaQ8AAf8DSwHRBAADOAFdAwAB/wNCAXQIAAMqAUADUQG1AwAB/wMA
        Af8DAAH/AxQB+QNQAaMDEAEVCAADUQG5AwAB/wMSARdcAAMfASsDIQH/AyQBNTgAAyQBNQMhAf8DHwEr
        DAADBAEFAzcB5AMtAUQwAAMaASQDKwH0AwwBEA8AAf8DSwHRBAADOAFdAwAB/wNCAXQIAANDAXcDGQH1
        AwAB/wMAAf8DAAH/AwQB/gM8AeIDOwFjCAADUQG5AwAB/wMSARdcAAMfASsDIQH/Az0BrgM+AZkDPgGZ
        Az4BmQM/AZcDMwFVJAADJAE1AyEB/wMfASsQAANEAYADSgGxMAADSAGPA0kBnRMAAf8DSwHRBAADOAFd
        AwAB/wNCAXQIAAM2AVcDPgHfAwAB/wMAAf8DAAH/Ay8B7ANLAY8DGwElCAADUQG5AwAB/wMSARdcAAMf
        ASsDIQH/AzgByQM7AbsDOwG7AzsBuwM5AcYDIgH+Az4BmQMEAQUcAAMkATUDIQH/Ax8BKxAAAxIBGAMq
        AfYDGgEjKAADCQELAy8B7wMlATcTAAH/A0sB0QQAAzgBXQMAAf8DQgF0CAADGwEmAzsBZQNEAdkDGAH3
        AywB7QNQAaAQAANRAbkDAAH/AxIBF1wAAx8BKwMhAf8DJAE1EAADNQFcAyYB9wM7Ab4DMwFVAzMBVQMz
        AVUDMwFVAzMBVQMzAVUDMwFVAz4BmQMiAfsDDwETFAADSgGkA0cBjSgAAz8BbgNHAcgXAAH/A0sB0QQA
        AzgBXQMAAf8DQgF0EAADLwFJA0sBjwNEAXkDKAE7EAADUQG5AwAB/wMSARdcAAMfASsDIQH/AyQBNRAA
        BAEDPwGgAyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DJwH0AzoBbBgAAyUBNgMvAfADCgEN
        IAADBAEFAzsB4AMyAU8XAAH/A0sB0QQAAzgBXQMAAf8DQgF0MAADUQG5AwAB/wMSARdcAAMWAR4DIQH/
        AzYBXwMNAREDDQERAw0BEQMSARcDPgGkAyMB/QM8AXkDDQERAw0BEQMNAREDDQERAw0BEQMNAREDDQER
        AwIBAyAAA0kBuQNGAcYDRgGIA0YBiANGAYgDRgGIA0YBiANGAYgDRgGIA0YBiANJAbsDRQHLBAIUAANC
        AXQDOQFfBAADOAFdAwAB/wNCAXQQAAMgAS4DSgGLA0oBiwNKAYsDSgGLA0oBiwNKAYsDSgGLAz4B3wMv
        AewDEAEVYAADPQGyAyEB/wMhAf8DIQH/AyEB/wMhAf8DJwHzAzEBUUQAAwoBDQNCAXgDSQGZA0kBmQNJ
        AZkDSQGZA0kBmQNJAZkDSQGZA0kBmQNEAX8DDwEUJAADOAFdAwAB/wNCAXQMAAMiATEDTwHBAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wM/AeEDUQGoAwsBDmAAAwIBAwMrAUIDMwFVAzMBVQMzAVUDMQFR
        AxIBGJwAAzABTAM4AeYDRAHZA1EBuQNRAbkDUQG5A04BzgMAAf8DTwGaAy0BRgMtAUYDLQFGAy0BRgMt
        AUYDLQFGAyYBOQMbASYDAgED/wAZAAMjATIDUQGwAygB7wMAAf8DAAH/AwAB/wMAAf8DTQGWAxABFf8A
        PQADAwEEAwwBDwMQARUDEgEXAxIBFwMSARcDEgEXAwkBDP8A4QABQgFNAT4HAAE+AwABKAMAAVgDAAEW
        AwABAQEAAQEFAAEIAQEWAAP/AQAI/wHAAwAI/wHAAwAF/wH4AQABAQHAAwABwAEAAQ8C/wH4AQABAQHA
        AwABwAEAAQ8CAAE4AQABAQHAAwABgAEAAQcCAAE5Av8BwAMAAY8B/wHHAT8B/QE5BgABjwH/AccBPwH4
        ATkGAAGPAf8BxwE/AfkBOQYAAY8B/wHHAgABOQEfAf4EAAGPAf8BxwIAATkBGAEGBAABjwH/AccBHwH+
        ATkBGAEGBAABgAF/AccBnwH+AXkBGAEGBAABgAEfAccBjwH8AXkBGAEeBAABjwEAAQcBzwH8AfkCHgQA
        AY8BAAEPAccB+AH5AR8B/gQAAYABAAEfAeABAAH5AR4FAAHAAT8B/wHgAQEB/wEcBQABwAF/BP8GAAb/
        AQABfwHAAwAG/wEAAf8BwAMACP8BwAMACw==
</value>
  </data>
  <data name="rdEncrypt.Text" xml:space="preserve">
    <value>Datensicherung verschlüsseln (erfordert mehr Rechenleistung)
Um die Datensicherung vor unberechtigtem Zugriff zu schützen, kann diese verschlüsselt werden. 
Sie werden dann bei jeder Sitzung nach Ihrem Kennwort gefragt. Die Verschlüsselung kann nicht
rückwirkend angewendet werden.</value>
  </data>
  <data name="rbFAB.Text" xml:space="preserve">
    <value>Vollautomatische Sicherung (empfohlen)
Der vollautomatische Sicherungsmodus sichert Ihre Dateien stündlich. Diese Sicherungen sind 
für 24 Stunden verfügbar. Danach sind tägliche Sicherungen für 30 Tage verfügbar. Anschließend 
werden wöchentliche Sicherungen verfügbar sein, solange genug Speicherplatz verfügbar ist.</value>
  </data>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>313, 15</value>
  </metadata>
</root>