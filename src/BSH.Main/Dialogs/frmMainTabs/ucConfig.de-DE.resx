<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAkAsAAAJNU0Z0AUkBTAIBAQMB
        AAEsAQEBLAEBARYBAAEWAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABWAMAARYDAAEBAQABIAUAAUAB
        Hv8A/wD/AIkAAxsBJQMoATwDLQFGAy0BRgMtAUYDLQFGAy0BRgMtAUYDLQFGAy0BRgMtAUYDLQFGAy0B
        RgMtAUYDLQFGAy0BRgMtAUYDEwEZbAAEAgMqAUADNQFVAzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUB
        VQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUBVQMqAUADAgEDZAADUAGdA0UB6QMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM4AV1sAANTAbADIQH/AyEB
        /wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/A1MB
        rhAABAEDNwFaA04BlQNPAZkDTwGZA08BmQNPAZkDTwGZA08BmQNPAZkDTwGZA08BmQNPAZkDTwGZA08B
        mQNOAZUDNgFZBAEMAANQAd8DRQHqA0oBiwNKAYsDSgGLA0oBiwNKAYsDSgGLA0oBiwNKAYsDSgGLA0oB
        iwNKAYsDSgGLA0oBiwNKAYsDSgGLAyMBM2gAAxYBHgMhAf8DOQFfAw0BEQMNAREDDQERAw0BEQMNARED
        DQERAw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMNAREDOgFgAyEB/wMWAR0MAANBAXMDUAHfA0YB
        fwNDAXcDQwF3A0MBdwNDAXcDQwF3A0MBdwNDAXcDQwF3A0MBdwNDAXcDQwF3A0MBdwNGAX8DUgHgA0AB
        cQ8AAf8DWQHRqAADHgErAyEB/wMkATU4AAMkATUDIQH/Ax4BKwwAA1YBwwM2AVgwAAMHAQkEAAM2AVgD
        VgHDDwAB/wNZAdEEAAMVAR0DPQFpA04BlgNRAaIDUQGiA1EBogNRAaIDUQGiA1EBogNRAaIDUQGiA1EB
        ogNRAaIDUQGiA1EBogNJAYUDNgFYAwYBB1wAAx4BKwMhAf8DJAE1OAADJAE1AyEB/wMeASsMAANWAcwD
        MQFNLAADQwF3A0sB5wQCAzEBTQNWAcwPAAH/A1kB0QQAAyoBPwNZAc0DGwH6AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzUB8gNZAcYDDQERXAADHgErAyEB/wMkATU4
        AAMkATUDIQH/Ax4BKwwAA1YBywMxAU4sAAMbASUDOAFcBAADMQFOA1YByw8AAf8DWQHRBAADNgFZAxwB
        +QNLAY0DIAEuAyABLgMgAS4DIAEuAyABLgMgAS4DIAEuAyABLgMgAS4DIAEuAyABLgMgAS4DWQHGAxwB
        +QMRARZcAAMeASsDIQH/AyQBNTgAAyQBNQMhAf8DHgErDAADUgGoA1EBoQMaASMDGQEiAxkBIgMZASID
        GQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGQEiAxkBIgMZASIDGgEjA1EBogNVAa4PAAH/A1kB0QQAAzgB
        XQMAAf8DQgF0MAADVwG5AwAB/wMSARdcAAMeASsDIQH/AyQBNTgAAyQBNQMhAf8DHgErDAADNwFaAyEB
        /wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DIQH/AyEB/wMhAf8DKwH9AyYB
        /gM9AWkPAAH/A1kB0QQAAzgBXQMAAf8DQgF0CAADKgFAA1YBtQMAAf8DAAH/AwAB/wMcAfkDUgGjAxAB
        FQgAA1cBuQMAAf8DEgEXXAADHgErAyEB/wMkATU4AAMkATUDIQH/Ax4BKwwAAwQBBQNLAeQDLQFEMAAD
        GgEkAzgB9AMMARAPAAH/A1kB0QQAAzgBXQMAAf8DQgF0CAADQwF3AykB9QMAAf8DAAH/AwAB/wMHAf4D
        TwHiAzsBYwgAA1cBuQMAAf8DEgEXXAADHgErAyEB/wNTAa4DTgGZA04BmQNOAZkDTQGXAzUBVSQAAyQB
        NQMhAf8DHgErEAADRgGAA1UBsTAAA0sBjwNQAZ0TAAH/A1kB0QQAAzgBXQMAAf8DQgF0CAADNgFXA1AB
        3wMAAf8DAAH/AwAB/wNDAewDSwGPAxsBJQgAA1cBuQMAAf8DEgEXXAADHgErAyEB/wNUAckDVAG7A1QB
        uwNUAbsDVAHGAyUB/gNOAZkDBAEFHAADJAE1AyEB/wMeASsQAAMSARgDMgH2AxoBIygAAwkBCwM+Ae8D
        JQE3EwAB/wNZAdEEAAM4AV0DAAH/A0IBdAgAAxsBJgM7AWUDVgHZAyUB9wNAAe0DUgGgEAADVwG5AwAB
        /wMSARdcAAMeASsDIQH/AyQBNRAAAzgBXAMzAfcDVQG+AzUBVQM1AVUDNQFVAzUBVQM1AVUDNQFVAzUB
        VQNOAZkDIgH7Aw8BExQAA1EBpANLAY0oAAM/AW4DWQHIFwAB/wNZAdEEAAM4AV0DAAH/A0IBdBAAAy8B
        SQNLAY8DRAF5AygBOxAAA1cBuQMAAf8DEgEXXAADHgErAyEB/wMkATUQAAQBA1ABoAMhAf8DIQH/AyEB
        /wMhAf8DIQH/AyEB/wMhAf8DIQH/AzQB9AM/AWwYAAMlATYDPgHwAwoBDSAAAwQBBQNSAeADMgFPFwAB
        /wNZAdEEAAM4AV0DAAH/A0IBdDAAA1cBuQMAAf8DEgEXXAADFgEeAyEB/wM5AV8DDQERAw0BEQMNARED
        EgEXA1EBpAMpAf0DRAF5Aw0BEQMNAREDDQERAw0BEQMNAREDDQERAw0BEQMCAQMgAANXAbkDVgHGA0kB
        iANJAYgDSQGIA0kBiANJAYgDSQGIA0kBiANJAYgDVwG7A1YBywQCFAADQgF0AzkBXwQAAzgBXQMAAf8D
        QgF0EAADIAEuA0oBiwNKAYsDSgGLA0oBiwNKAYsDSgGLA0oBiwNQAd8DQwHsAxABFWAAA1QBsgMhAf8D
        IQH/AyEB/wMhAf8DIQH/AzcB8wMzAVFEAAMKAQ0DRAF4A08BmQNPAZkDTwGZA08BmQNPAZkDTwGZA08B
        mQNPAZkDRgF/Aw8BFCQAAzgBXQMAAf8DQgF0DAADIgExA1kBwQMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DUwHhA1IBqAMLAQ5gAAMCAQMDKwFCAzUBVQM1AVUDNQFVAzMBUQMSARicAAMwAUwDTgHmA1YB
        2QNXAbkDVwG5A1cBuQNZAc4DAAH/A1ABmgMtAUYDLQFGAy0BRgMtAUYDLQFGAy0BRgMmATkDGwEmAwIB
        A/8AGQADIwEyA1YBsAM6Ae8DAAH/AwAB/wMAAf8DAAH/A04BlgMQARX/AD0AAwMBBAMMAQ8DEAEVAxIB
        FwMSARcDEgEXAxIBFwMJAQz/AOEAAUIBTQE+BwABPgMAASgDAAFYAwABFgMAAQEBAAEBBQABCAEBFgAD
        /wEACP8BwAMACP8BwAMABf8B+AEAAQEBwAMAAcABAAEPAv8B+AEAAQEBwAMAAcABAAEPAgABOAEAAQEB
        wAMAAYABAAEHAgABOQL/AcADAAGPAf8BxwE/Af0BOQYAAY8B/wHHAT8B+AE5BgABjwH/AccBPwH5ATkG
        AAGPAf8BxwIAATkBHwH+BAABjwH/AccCAAE5ARgBBgQAAY8B/wHHAR8B/gE5ARgBBgQAAYABfwHHAZ8B
        /gF5ARgBBgQAAYABHwHHAY8B/AF5ARgBHgQAAY8BAAEHAc8B/AH5Ah4EAAGPAQABDwHHAfgB+QEfAf4E
        AAGAAQABHwHgAQAB+QEeBQABwAE/Af8B4AEBAf8BHAUAAcABfwT/BgAG/wEAAX8BwAMABv8BAAH/AcAD
        AAj/AcADAAs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TabPage4.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 37</value>
  </data>
  <data name="TabPage4.Size" type="System.Drawing.Size, System.Drawing">
    <value>936, 439</value>
  </data>
  <data name="TabPage3.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 37</value>
  </data>
  <data name="TabPage3.Size" type="System.Drawing.Size, System.Drawing">
    <value>936, 439</value>
  </data>
  <data name="cmdDeactivateEncrypt.Location" type="System.Drawing.Point, System.Drawing">
    <value>206, 322</value>
  </data>
  <data name="plCompressEncrypt.Size" type="System.Drawing.Size, System.Drawing">
    <value>916, 306</value>
  </data>
  <data name="cmdExcludeCompress.Location" type="System.Drawing.Point, System.Drawing">
    <value>50, 114</value>
  </data>
  <data name="rdEncrypt.Location" type="System.Drawing.Point, System.Drawing">
    <value>26, 190</value>
  </data>
  <data name="cmdEncrypt.Location" type="System.Drawing.Point, System.Drawing">
    <value>56, 322</value>
  </data>
  <data name="TabPage2.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 37</value>
  </data>
  <data name="TabPage2.Size" type="System.Drawing.Size, System.Drawing">
    <value>936, 439</value>
  </data>
  <data name="TabPage5.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 37</value>
  </data>
  <data name="TabPage5.Size" type="System.Drawing.Size, System.Drawing">
    <value>936, 439</value>
  </data>
</root>